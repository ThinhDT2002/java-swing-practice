/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package com.superidol.form;

import com.superidol.dao.HoaDonChiTietDAO;
import com.superidol.dao.HoaDonDAO;
import com.superidol.dao.KhachHangDAO;
import com.superidol.dao.SanPhamDAO;
import com.superidol.model.HoaDon;
import com.superidol.model.HoaDonChiTiet;
import com.superidol.model.KhachHang;
import com.superidol.model.SanPham;
import com.superidol.utils.Authorize;
import com.superidol.utils.DateHelper;
import com.superidol.utils.MsgBox;
import com.toedter.calendar.JTextFieldDateEditor;
import java.awt.Color;
import java.io.File;
import java.io.FileOutputStream;
import java.util.ArrayList;
import java.util.Date;
import java.util.List;
import javax.swing.DefaultComboBoxModel;
import javax.swing.JOptionPane;
import javax.swing.table.DefaultTableModel;
import org.apache.poi.ss.usermodel.CellType;
import org.apache.poi.xssf.usermodel.XSSFCell;
import org.apache.poi.xssf.usermodel.XSSFRow;
import org.apache.poi.xssf.usermodel.XSSFSheet;
import org.apache.poi.xssf.usermodel.XSSFWorkbook;

/**
 *
 * @author duyan
 */
public class FormHoaDon extends javax.swing.JPanel {

    /**
     * Creates new form FormHoaDon
     */
    public FormHoaDon() {
        initComponents();
        fillToTableHoaDon();
        fillToTableHDCT();
        JTextFieldDateEditor editor = (JTextFieldDateEditor) calendarNgayMuaHang.getDateEditor();
        editor.setEditable(false);
        txtMaNhanVien.setEditable(false);
        disableButton();
        disabledButtonHDCT();
        fillCboTrangThaiThemMoi();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jTabbedPane1 = new javax.swing.JTabbedPane();
        jPanel1 = new javax.swing.JPanel();
        lblThongTinHD = new javax.swing.JLabel();
        btnClearHoaDon = new javax.swing.JButton();
        panelRound1 = new com.superidol.swing.PanelRound();
        lblNgayMuaHang = new javax.swing.JLabel();
        lblGhiChu = new javax.swing.JLabel();
        lblMaNhanVien = new javax.swing.JLabel();
        lblTrangThai = new javax.swing.JLabel();
        txtMaNhanVien = new javax.swing.JTextField();
        jScrollPane2 = new javax.swing.JScrollPane();
        txtGhiChu = new javax.swing.JTextPane();
        txtTimKiemHD = new javax.swing.JTextField();
        lblTimKiem = new javax.swing.JLabel();
        btnThemHD = new javax.swing.JButton();
        btnXuatExcelHD = new javax.swing.JButton();
        btnXoaHD = new javax.swing.JButton();
        btnSuaHD = new javax.swing.JButton();
        cboTrangThai = new com.superidol.swing.Combobox();
        lblMaKhachHang = new javax.swing.JLabel();
        txtMaKhachHang = new javax.swing.JTextField();
        calendarNgayMuaHang = new com.toedter.calendar.JDateChooser();
        jScrollPane1 = new javax.swing.JScrollPane();
        tblHoaDon = new com.superidol.swing.TableColumn();
        lblHoaDon = new javax.swing.JLabel();
        scrollBar3 = new com.superidol.swing.ScrollBar();
        jPanel3 = new javax.swing.JPanel();
        lblThonTinHDCT = new javax.swing.JLabel();
        btnClearHDCT = new javax.swing.JButton();
        panelRound2 = new com.superidol.swing.PanelRound();
        lblMaHoaDonHDCT = new javax.swing.JLabel();
        lblMaSPHDCT = new javax.swing.JLabel();
        lblSoLuongHDCT = new javax.swing.JLabel();
        txtMaSPHDCT = new javax.swing.JTextField();
        txtTimKiemHDCT = new javax.swing.JTextField();
        lblTimKiemHDCT = new javax.swing.JLabel();
        btnThemHDCT = new javax.swing.JButton();
        btnXuatExcelHDCT = new javax.swing.JButton();
        btnXoaHDCT = new javax.swing.JButton();
        btnSuaHDCT = new javax.swing.JButton();
        txtMaHoaDonHDCT = new javax.swing.JTextField();
        txtSoLuongHDCT = new javax.swing.JTextField();
        jScrollPane4 = new javax.swing.JScrollPane();
        tblHoaDonChiTiet = new com.superidol.swing.TableColumn();
        lblHDCT = new javax.swing.JLabel();
        scrollBar2 = new com.superidol.swing.ScrollBar();

        jTabbedPane1.setBackground(new java.awt.Color(255, 255, 255));

        jPanel1.setBackground(new java.awt.Color(255, 255, 255));
        jPanel1.setPreferredSize(new java.awt.Dimension(992, 600));

        lblThongTinHD.setFont(new java.awt.Font("sansserif", 1, 20)); // NOI18N
        lblThongTinHD.setForeground(new java.awt.Color(79, 79, 79));
        lblThongTinHD.setText("Thông tin");
        lblThongTinHD.setBorder(javax.swing.BorderFactory.createEmptyBorder(10, 10, 1, 1));

        btnClearHoaDon.setBackground(new java.awt.Color(255, 255, 255));
        btnClearHoaDon.setIcon(new javax.swing.ImageIcon(getClass().getResource("/com/superidol/icon/load.png"))); // NOI18N
        btnClearHoaDon.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseEntered(java.awt.event.MouseEvent evt) {
                btnClearHoaDonMouseEntered(evt);
            }
            public void mouseExited(java.awt.event.MouseEvent evt) {
                btnClearHoaDonMouseExited(evt);
            }
        });
        btnClearHoaDon.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnClearHoaDonHoaDonActionPerformed(evt);
            }
        });

        panelRound1.setBackground(new java.awt.Color(255, 255, 255));

        lblNgayMuaHang.setText("Ngày mua hàng:");

        lblGhiChu.setText("Ghi chú:");

        lblMaNhanVien.setText("Mã nhân viên:");

        lblTrangThai.setText("Trạng thái:");

        txtGhiChu.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(255, 255, 255)));
        jScrollPane2.setViewportView(txtGhiChu);
        txtGhiChu.getAccessibleContext().setAccessibleName("");

        txtTimKiemHD.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyReleased(java.awt.event.KeyEvent evt) {
                txtTimKiemHDKeyReleased(evt);
            }
        });

        lblTimKiem.setText("Tìm kiếm:");

        btnThemHD.setBackground(new java.awt.Color(255, 255, 255));
        btnThemHD.setFont(new java.awt.Font("Tahoma", 1, 13)); // NOI18N
        btnThemHD.setIcon(new javax.swing.ImageIcon(getClass().getResource("/com/superidol/icon/them.png"))); // NOI18N
        btnThemHD.setText("Thêm");
        btnThemHD.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseEntered(java.awt.event.MouseEvent evt) {
                btnThemHDHDMouseEntered(evt);
            }
            public void mouseExited(java.awt.event.MouseEvent evt) {
                btnThemHDHDMouseExited(evt);
            }
        });
        btnThemHD.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnThemHDActionPerformed(evt);
            }
        });

        btnXuatExcelHD.setBackground(new java.awt.Color(255, 255, 255));
        btnXuatExcelHD.setFont(new java.awt.Font("Tahoma", 1, 13)); // NOI18N
        btnXuatExcelHD.setIcon(new javax.swing.ImageIcon(getClass().getResource("/com/superidol/icon/Excel.png"))); // NOI18N
        btnXuatExcelHD.setText("Xuất Excel");
        btnXuatExcelHD.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseEntered(java.awt.event.MouseEvent evt) {
                btnXuatExcelHDHDMouseEntered(evt);
            }
            public void mouseExited(java.awt.event.MouseEvent evt) {
                btnXuatExcelHDHDMouseExited(evt);
            }
        });
        btnXuatExcelHD.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnXuatExcelHDActionPerformed(evt);
            }
        });

        btnXoaHD.setBackground(new java.awt.Color(255, 255, 255));
        btnXoaHD.setFont(new java.awt.Font("Tahoma", 1, 13)); // NOI18N
        btnXoaHD.setIcon(new javax.swing.ImageIcon(getClass().getResource("/com/superidol/icon/xoa.png"))); // NOI18N
        btnXoaHD.setText("Xóa");
        btnXoaHD.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseEntered(java.awt.event.MouseEvent evt) {
                btnXoaHDHDMouseEntered(evt);
            }
            public void mouseExited(java.awt.event.MouseEvent evt) {
                btnXoaHDHDMouseExited(evt);
            }
        });
        btnXoaHD.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnXoaHDActionPerformed(evt);
            }
        });

        btnSuaHD.setBackground(new java.awt.Color(255, 255, 255));
        btnSuaHD.setFont(new java.awt.Font("Tahoma", 1, 13)); // NOI18N
        btnSuaHD.setIcon(new javax.swing.ImageIcon(getClass().getResource("/com/superidol/icon/sua.png"))); // NOI18N
        btnSuaHD.setText("Sửa");
        btnSuaHD.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseEntered(java.awt.event.MouseEvent evt) {
                btnSuaHDHDMouseEntered(evt);
            }
            public void mouseExited(java.awt.event.MouseEvent evt) {
                btnSuaHDHDMouseExited(evt);
            }
        });
        btnSuaHD.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnSuaHDActionPerformed(evt);
            }
        });

        cboTrangThai.setModel(new javax.swing.DefaultComboBoxModel(new String[] { "Đã thanh toán", "Chưa thanh toán", "Huỷ bỏ" }));
        cboTrangThai.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mousePressed(java.awt.event.MouseEvent evt) {
                cboTrangThaiMousePressed(evt);
            }
        });

        lblMaKhachHang.setText("Mã khách hàng:");

        calendarNgayMuaHang.setDateFormatString("MM/dd/yyyy");

        javax.swing.GroupLayout panelRound1Layout = new javax.swing.GroupLayout(panelRound1);
        panelRound1.setLayout(panelRound1Layout);
        panelRound1Layout.setHorizontalGroup(
            panelRound1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(panelRound1Layout.createSequentialGroup()
                .addGap(100, 100, 100)
                .addGroup(panelRound1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addGroup(panelRound1Layout.createSequentialGroup()
                        .addComponent(btnThemHD, javax.swing.GroupLayout.PREFERRED_SIZE, 172, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(18, 18, 18)
                        .addComponent(btnXoaHD, javax.swing.GroupLayout.PREFERRED_SIZE, 164, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(18, 18, 18)
                        .addComponent(btnSuaHD, javax.swing.GroupLayout.PREFERRED_SIZE, 164, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(18, 18, 18)
                        .addComponent(btnXuatExcelHD, javax.swing.GroupLayout.PREFERRED_SIZE, 206, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(panelRound1Layout.createSequentialGroup()
                        .addComponent(lblGhiChu)
                        .addGap(56, 56, 56)
                        .addComponent(jScrollPane2, javax.swing.GroupLayout.PREFERRED_SIZE, 252, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addGroup(panelRound1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(lblMaKhachHang)
                            .addComponent(lblTrangThai)
                            .addComponent(lblMaNhanVien)
                            .addComponent(lblTimKiem))
                        .addGap(29, 29, 29)
                        .addGroup(panelRound1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(cboTrangThai, javax.swing.GroupLayout.PREFERRED_SIZE, 182, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(txtMaKhachHang, javax.swing.GroupLayout.PREFERRED_SIZE, 182, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(txtTimKiemHD, javax.swing.GroupLayout.PREFERRED_SIZE, 182, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(txtMaNhanVien, javax.swing.GroupLayout.PREFERRED_SIZE, 182, javax.swing.GroupLayout.PREFERRED_SIZE))))
                .addGap(101, 101, 101))
            .addGroup(panelRound1Layout.createSequentialGroup()
                .addGap(98, 98, 98)
                .addComponent(lblNgayMuaHang)
                .addGap(18, 18, 18)
                .addComponent(calendarNgayMuaHang, javax.swing.GroupLayout.PREFERRED_SIZE, 252, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        panelRound1Layout.setVerticalGroup(
            panelRound1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(panelRound1Layout.createSequentialGroup()
                .addGroup(panelRound1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(panelRound1Layout.createSequentialGroup()
                        .addGap(20, 20, 20)
                        .addGroup(panelRound1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                            .addComponent(lblNgayMuaHang)
                            .addComponent(calendarNgayMuaHang, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(18, 18, 18))
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, panelRound1Layout.createSequentialGroup()
                        .addContainerGap()
                        .addGroup(panelRound1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(txtMaNhanVien, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(lblMaNhanVien))
                        .addGap(18, 18, 18)))
                .addGroup(panelRound1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(panelRound1Layout.createSequentialGroup()
                        .addGroup(panelRound1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(lblGhiChu)
                            .addGroup(panelRound1Layout.createSequentialGroup()
                                .addGap(7, 7, 7)
                                .addGroup(panelRound1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                                    .addComponent(lblMaKhachHang)
                                    .addComponent(txtMaKhachHang, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))))
                        .addGroup(panelRound1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(panelRound1Layout.createSequentialGroup()
                                .addGap(15, 15, 15)
                                .addComponent(lblTrangThai))
                            .addGroup(panelRound1Layout.createSequentialGroup()
                                .addGap(18, 18, 18)
                                .addComponent(cboTrangThai, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)))
                        .addGap(18, 18, 18)
                        .addGroup(panelRound1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(txtTimKiemHD, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(lblTimKiem)))
                    .addComponent(jScrollPane2, javax.swing.GroupLayout.PREFERRED_SIZE, 112, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(31, 31, 31)
                .addGroup(panelRound1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(btnThemHD)
                    .addComponent(btnXoaHD, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(btnSuaHD, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(btnXuatExcelHD))
                .addContainerGap())
        );

        jScrollPane1.setBackground(new java.awt.Color(245, 245, 245));
        jScrollPane1.setBorder(null);
        jScrollPane1.setVerticalScrollBar(scrollBar3);

        tblHoaDon.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "Mã hóa đơn", "Ngày mua hàng", "Trạng thái", "Mã nhân viên", "Mã Khách hàng", "Ghi chú"
            }
        ) {
            boolean[] canEdit = new boolean [] {
                false, false, false, false, false, true
            };

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        tblHoaDon.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                tblHoaDonMouseClicked(evt);
            }
        });
        jScrollPane1.setViewportView(tblHoaDon);

        lblHoaDon.setFont(new java.awt.Font("sansserif", 1, 20)); // NOI18N
        lblHoaDon.setForeground(new java.awt.Color(79, 79, 79));
        lblHoaDon.setText("Hóa đơn");
        lblHoaDon.setBorder(javax.swing.BorderFactory.createEmptyBorder(10, 10, 1, 1));

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(panelRound1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(jScrollPane1)
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(lblHoaDon)
                            .addGroup(jPanel1Layout.createSequentialGroup()
                                .addComponent(lblThongTinHD)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                .addComponent(btnClearHoaDon, javax.swing.GroupLayout.PREFERRED_SIZE, 62, javax.swing.GroupLayout.PREFERRED_SIZE)))
                        .addGap(0, 0, Short.MAX_VALUE)))
                .addGap(0, 0, 0)
                .addComponent(scrollBar3, javax.swing.GroupLayout.PREFERRED_SIZE, 5, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(0, 0, 0))
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(lblThongTinHD)
                    .addComponent(btnClearHoaDon, javax.swing.GroupLayout.PREFERRED_SIZE, 49, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(panelRound1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(lblHoaDon)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 0, Short.MAX_VALUE)
                    .addComponent(scrollBar3, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)))
        );

        jTabbedPane1.addTab("Hóa đơn", jPanel1);

        jPanel3.setBackground(new java.awt.Color(255, 255, 255));

        lblThonTinHDCT.setFont(new java.awt.Font("sansserif", 1, 20)); // NOI18N
        lblThonTinHDCT.setForeground(new java.awt.Color(79, 79, 79));
        lblThonTinHDCT.setText("Thông tin");
        lblThonTinHDCT.setBorder(javax.swing.BorderFactory.createEmptyBorder(10, 10, 1, 1));

        btnClearHDCT.setBackground(new java.awt.Color(255, 255, 255));
        btnClearHDCT.setIcon(new javax.swing.ImageIcon(getClass().getResource("/com/superidol/icon/load.png"))); // NOI18N
        btnClearHDCT.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseEntered(java.awt.event.MouseEvent evt) {
                btnClearHDCTMouseEntered(evt);
            }
            public void mouseExited(java.awt.event.MouseEvent evt) {
                btnClearHDCTMouseExited(evt);
            }
        });
        btnClearHDCT.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnClearHDCTActionPerformed(evt);
            }
        });

        panelRound2.setBackground(new java.awt.Color(255, 255, 255));

        lblMaHoaDonHDCT.setText("Mã hóa đơn:");

        lblMaSPHDCT.setText("Mã sản phẩm:");

        lblSoLuongHDCT.setText("Số lượng:");

        txtTimKiemHDCT.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyReleased(java.awt.event.KeyEvent evt) {
                txtTimKiemHDCTKeyReleased(evt);
            }
        });

        lblTimKiemHDCT.setText("Tìm kiếm:");

        btnThemHDCT.setBackground(new java.awt.Color(255, 255, 255));
        btnThemHDCT.setFont(new java.awt.Font("Tahoma", 1, 13)); // NOI18N
        btnThemHDCT.setIcon(new javax.swing.ImageIcon(getClass().getResource("/com/superidol/icon/them.png"))); // NOI18N
        btnThemHDCT.setText("Thêm");
        btnThemHDCT.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseEntered(java.awt.event.MouseEvent evt) {
                btnThemHDCTMouseEntered(evt);
            }
            public void mouseExited(java.awt.event.MouseEvent evt) {
                btnThemHDCTMouseExited(evt);
            }
        });
        btnThemHDCT.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnThemHDCTActionPerformed(evt);
            }
        });

        btnXuatExcelHDCT.setBackground(new java.awt.Color(255, 255, 255));
        btnXuatExcelHDCT.setFont(new java.awt.Font("Tahoma", 1, 13)); // NOI18N
        btnXuatExcelHDCT.setIcon(new javax.swing.ImageIcon(getClass().getResource("/com/superidol/icon/Excel.png"))); // NOI18N
        btnXuatExcelHDCT.setText("Xuất Excel");
        btnXuatExcelHDCT.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseEntered(java.awt.event.MouseEvent evt) {
                btnXuatExcelHDCTMouseEntered(evt);
            }
            public void mouseExited(java.awt.event.MouseEvent evt) {
                btnXuatExcelHDCTMouseExited(evt);
            }
        });
        btnXuatExcelHDCT.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnXuatExcelHDCTActionPerformed(evt);
            }
        });

        btnXoaHDCT.setBackground(new java.awt.Color(255, 255, 255));
        btnXoaHDCT.setFont(new java.awt.Font("Tahoma", 1, 13)); // NOI18N
        btnXoaHDCT.setIcon(new javax.swing.ImageIcon(getClass().getResource("/com/superidol/icon/xoa.png"))); // NOI18N
        btnXoaHDCT.setText("Xóa");
        btnXoaHDCT.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseEntered(java.awt.event.MouseEvent evt) {
                btnXoaHDCTMouseEntered(evt);
            }
            public void mouseExited(java.awt.event.MouseEvent evt) {
                btnXoaHDCTMouseExited(evt);
            }
        });
        btnXoaHDCT.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnXoaHDCTActionPerformed(evt);
            }
        });

        btnSuaHDCT.setBackground(new java.awt.Color(255, 255, 255));
        btnSuaHDCT.setFont(new java.awt.Font("Tahoma", 1, 13)); // NOI18N
        btnSuaHDCT.setIcon(new javax.swing.ImageIcon(getClass().getResource("/com/superidol/icon/sua.png"))); // NOI18N
        btnSuaHDCT.setText("Sửa");
        btnSuaHDCT.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseEntered(java.awt.event.MouseEvent evt) {
                btnSuaHDCTMouseEntered(evt);
            }
            public void mouseExited(java.awt.event.MouseEvent evt) {
                btnSuaHDCTMouseExited(evt);
            }
        });
        btnSuaHDCT.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnSuaHDCTActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout panelRound2Layout = new javax.swing.GroupLayout(panelRound2);
        panelRound2.setLayout(panelRound2Layout);
        panelRound2Layout.setHorizontalGroup(
            panelRound2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(panelRound2Layout.createSequentialGroup()
                .addGap(88, 88, 88)
                .addGroup(panelRound2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(panelRound2Layout.createSequentialGroup()
                        .addComponent(btnThemHDCT, javax.swing.GroupLayout.PREFERRED_SIZE, 172, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(18, 18, 18)
                        .addComponent(btnXoaHDCT, javax.swing.GroupLayout.PREFERRED_SIZE, 164, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(18, 18, 18)
                        .addComponent(btnSuaHDCT, javax.swing.GroupLayout.PREFERRED_SIZE, 164, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(18, 18, 18)
                        .addComponent(btnXuatExcelHDCT, javax.swing.GroupLayout.PREFERRED_SIZE, 206, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(panelRound2Layout.createSequentialGroup()
                        .addGroup(panelRound2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(lblMaHoaDonHDCT, javax.swing.GroupLayout.PREFERRED_SIZE, 80, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(lblSoLuongHDCT))
                        .addGap(18, 18, 18)
                        .addGroup(panelRound2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(txtMaHoaDonHDCT, javax.swing.GroupLayout.PREFERRED_SIZE, 184, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(txtSoLuongHDCT, javax.swing.GroupLayout.PREFERRED_SIZE, 182, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(150, 150, 150)
                        .addGroup(panelRound2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(lblMaSPHDCT)
                            .addComponent(lblTimKiemHDCT))
                        .addGap(18, 18, 18)
                        .addGroup(panelRound2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(txtTimKiemHDCT, javax.swing.GroupLayout.PREFERRED_SIZE, 182, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(txtMaSPHDCT, javax.swing.GroupLayout.PREFERRED_SIZE, 182, javax.swing.GroupLayout.PREFERRED_SIZE))))
                .addGap(101, 101, 101))
        );
        panelRound2Layout.setVerticalGroup(
            panelRound2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(panelRound2Layout.createSequentialGroup()
                .addGap(20, 20, 20)
                .addGroup(panelRound2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(panelRound2Layout.createSequentialGroup()
                        .addGap(6, 6, 6)
                        .addComponent(lblMaHoaDonHDCT))
                    .addGroup(panelRound2Layout.createSequentialGroup()
                        .addGap(3, 3, 3)
                        .addComponent(txtMaHoaDonHDCT, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(panelRound2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                        .addComponent(txtMaSPHDCT, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addComponent(lblMaSPHDCT)))
                .addGap(53, 53, 53)
                .addGroup(panelRound2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(txtTimKiemHDCT, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(lblTimKiemHDCT)
                    .addComponent(txtSoLuongHDCT, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(lblSoLuongHDCT))
                .addGap(78, 78, 78)
                .addGroup(panelRound2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(btnThemHDCT)
                    .addComponent(btnXoaHDCT)
                    .addComponent(btnSuaHDCT)
                    .addComponent(btnXuatExcelHDCT))
                .addContainerGap())
        );

        jScrollPane4.setBackground(new java.awt.Color(245, 245, 245));
        jScrollPane4.setBorder(null);
        jScrollPane4.setVerticalScrollBar(scrollBar2);

        tblHoaDonChiTiet.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "Mã hóa đơn chi tiết", "Mã sản phẩm", "Tên sản phẩm", "Mã hóa đơn", "Số lượng", "Đơn giá", "Thành tiền"
            }
        ) {
            Class[] types = new Class [] {
                java.lang.Object.class, java.lang.Object.class, java.lang.Object.class, java.lang.Object.class, java.lang.Object.class, java.lang.Double.class, java.lang.Object.class
            };
            boolean[] canEdit = new boolean [] {
                false, false, true, false, false, false, true
            };

            public Class getColumnClass(int columnIndex) {
                return types [columnIndex];
            }

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        tblHoaDonChiTiet.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                tblHoaDonChiTietMouseClicked(evt);
            }
        });
        jScrollPane4.setViewportView(tblHoaDonChiTiet);

        lblHDCT.setFont(new java.awt.Font("sansserif", 1, 20)); // NOI18N
        lblHDCT.setForeground(new java.awt.Color(79, 79, 79));
        lblHDCT.setText("Hóa đơn chi tiết");
        lblHDCT.setBorder(javax.swing.BorderFactory.createEmptyBorder(10, 10, 1, 1));

        scrollBar2.setBackground(new java.awt.Color(245, 245, 245));

        javax.swing.GroupLayout jPanel3Layout = new javax.swing.GroupLayout(jPanel3);
        jPanel3.setLayout(jPanel3Layout);
        jPanel3Layout.setHorizontalGroup(
            jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel3Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jScrollPane4)
                .addGap(0, 0, 0)
                .addComponent(scrollBar2, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
            .addGroup(jPanel3Layout.createSequentialGroup()
                .addGap(12, 12, 12)
                .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(panelRound2, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addGroup(jPanel3Layout.createSequentialGroup()
                        .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(jPanel3Layout.createSequentialGroup()
                                .addComponent(lblThonTinHDCT)
                                .addGap(12, 12, 12)
                                .addComponent(btnClearHDCT, javax.swing.GroupLayout.PREFERRED_SIZE, 62, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addComponent(lblHDCT, javax.swing.GroupLayout.PREFERRED_SIZE, 172, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(0, 0, Short.MAX_VALUE))))
        );
        jPanel3Layout.setVerticalGroup(
            jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel3Layout.createSequentialGroup()
                .addGap(13, 13, 13)
                .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(lblThonTinHDCT)
                    .addComponent(btnClearHDCT, javax.swing.GroupLayout.PREFERRED_SIZE, 49, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(7, 7, 7)
                .addComponent(panelRound2, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addComponent(lblHDCT)
                .addGap(7, 7, 7)
                .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jScrollPane4, javax.swing.GroupLayout.PREFERRED_SIZE, 0, Short.MAX_VALUE)
                    .addComponent(scrollBar2, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)))
        );

        jTabbedPane1.addTab("Hóa đơn chi tiết", jPanel3);

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(this);
        this.setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jTabbedPane1)
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jTabbedPane1)
        );
    }// </editor-fold>//GEN-END:initComponents

    private void btnClearHDCTActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnClearHDCTActionPerformed
        // TODO add your handling code here:
        clearFormHDCT();
    }//GEN-LAST:event_btnClearHDCTActionPerformed

    private void btnSuaHDHDMouseExited(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_btnSuaHDHDMouseExited
        btnSuaHD.setBackground(Color.white);
        btnSuaHD.setForeground(Color.black);
    }//GEN-LAST:event_btnSuaHDHDMouseExited

    private void btnSuaHDHDMouseEntered(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_btnSuaHDHDMouseEntered
        btnSuaHD.setBackground(Color.decode("#FDA7DF"));
        btnSuaHD.setForeground(Color.white);
    }//GEN-LAST:event_btnSuaHDHDMouseEntered

    private void btnXoaHDHDMouseExited(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_btnXoaHDHDMouseExited
        btnXoaHD.setBackground(Color.white);
        btnXoaHD.setForeground(Color.black);
    }//GEN-LAST:event_btnXoaHDHDMouseExited

    private void btnXoaHDHDMouseEntered(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_btnXoaHDHDMouseEntered
        btnXoaHD.setBackground(Color.decode("#FDA7DF"));
        btnXoaHD.setForeground(Color.white);
    }//GEN-LAST:event_btnXoaHDHDMouseEntered

    private void btnXuatExcelHDHDMouseExited(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_btnXuatExcelHDHDMouseExited
        btnXuatExcelHD.setBackground(Color.white);
        btnXuatExcelHD.setForeground(Color.black);
    }//GEN-LAST:event_btnXuatExcelHDHDMouseExited

    private void btnXuatExcelHDHDMouseEntered(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_btnXuatExcelHDHDMouseEntered
        btnXuatExcelHD.setBackground(Color.decode("#FDA7DF"));
        btnXuatExcelHD.setForeground(Color.white);
    }//GEN-LAST:event_btnXuatExcelHDHDMouseEntered

    private void btnThemHDHDMouseExited(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_btnThemHDHDMouseExited
        btnThemHD.setBackground(Color.white);
        btnThemHD.setForeground(Color.black);
    }//GEN-LAST:event_btnThemHDHDMouseExited

    private void btnThemHDHDMouseEntered(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_btnThemHDHDMouseEntered
        btnThemHD.setBackground(Color.decode("#FDA7DF"));
        btnThemHD.setForeground(Color.white);
    }//GEN-LAST:event_btnThemHDHDMouseEntered

    private void btnClearHoaDonHoaDonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnClearHoaDonHoaDonActionPerformed
        clearForm();
    }//GEN-LAST:event_btnClearHoaDonHoaDonActionPerformed

    private void btnClearHoaDonMouseEntered(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_btnClearHoaDonMouseEntered
        btnClearHoaDon.setBackground(Color.decode("#FDA7DF"));
        btnClearHoaDon.setForeground(Color.white);
    }//GEN-LAST:event_btnClearHoaDonMouseEntered

    private void btnClearHoaDonMouseExited(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_btnClearHoaDonMouseExited
        btnClearHoaDon.setBackground(Color.white);
        btnClearHoaDon.setForeground(Color.black);
    }//GEN-LAST:event_btnClearHoaDonMouseExited

    private void btnClearHDCTMouseEntered(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_btnClearHDCTMouseEntered
        btnClearHDCT.setBackground(Color.decode("#FDA7DF"));
        btnClearHDCT.setForeground(Color.white);
    }//GEN-LAST:event_btnClearHDCTMouseEntered

    private void btnClearHDCTMouseExited(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_btnClearHDCTMouseExited
        btnClearHDCT.setBackground(Color.white);
        btnClearHDCT.setForeground(Color.black);
    }//GEN-LAST:event_btnClearHDCTMouseExited

    private void tblHoaDonMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_tblHoaDonMouseClicked
        // TODO add your handling code here:
        rowHoaDon = tblHoaDon.getSelectedRow();
        if (rowHoaDon >= 0) {
            fillCboTrangThaiUpdate();
        } else {
            fillCboTrangThaiThemMoi();
        }
        edit();
        updateStatusButton();
    }//GEN-LAST:event_tblHoaDonMouseClicked

    private void btnThemHDActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnThemHDActionPerformed
        // TODO add your handling code here:
        if (isValidated()) {
            if (maKHTonTai()) {
                insert();
            }
        }
    }//GEN-LAST:event_btnThemHDActionPerformed

    private void btnXoaHDActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnXoaHDActionPerformed
        // TODO add your handling code here:
        delete();
    }//GEN-LAST:event_btnXoaHDActionPerformed

    private void btnSuaHDActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnSuaHDActionPerformed
        // TODO add your handling code here:
        if (isValidated()) {
            if (maKHTonTai()) {
                update();
            }
        }
    }//GEN-LAST:event_btnSuaHDActionPerformed

    private void txtTimKiemHDKeyReleased(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_txtTimKiemHDKeyReleased
        // TODO add your handling code here:
        timKiem();
    }//GEN-LAST:event_txtTimKiemHDKeyReleased

    private void tblHoaDonChiTietMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_tblHoaDonChiTietMouseClicked
        // TODO add your handling code here:
        rowHDCT = tblHoaDonChiTiet.getSelectedRow();
        editHDCT();
        updateStatusButtonHDCT();
    }//GEN-LAST:event_tblHoaDonChiTietMouseClicked

    private void btnSuaHDCTActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnSuaHDCTActionPerformed
        // TODO add your handling code here:
        if (isValidatedHDCT()) {
            capNhatSoLuongSP_update();
            updateHDCT();
        }
    }//GEN-LAST:event_btnSuaHDCTActionPerformed

    private void btnSuaHDCTMouseExited(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_btnSuaHDCTMouseExited
        btnSuaHDCT.setBackground(Color.white);
        btnSuaHDCT.setForeground(Color.black);
    }//GEN-LAST:event_btnSuaHDCTMouseExited

    private void btnSuaHDCTMouseEntered(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_btnSuaHDCTMouseEntered
        btnSuaHDCT.setBackground(Color.decode("#FDA7DF"));
        btnSuaHDCT.setForeground(Color.white);
    }//GEN-LAST:event_btnSuaHDCTMouseEntered

    private void btnXoaHDCTActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnXoaHDCTActionPerformed
        // TODO add your handling code here:
        deleteHDCT();
    }//GEN-LAST:event_btnXoaHDCTActionPerformed

    private void btnXoaHDCTMouseExited(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_btnXoaHDCTMouseExited
        btnXoaHDCT.setBackground(Color.white);
        btnXoaHDCT.setForeground(Color.black);
    }//GEN-LAST:event_btnXoaHDCTMouseExited

    private void btnXoaHDCTMouseEntered(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_btnXoaHDCTMouseEntered
        btnXoaHDCT.setBackground(Color.decode("#FDA7DF"));
        btnXoaHDCT.setForeground(Color.white);
    }//GEN-LAST:event_btnXoaHDCTMouseEntered

    private void btnXuatExcelHDCTMouseExited(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_btnXuatExcelHDCTMouseExited
        btnXuatExcelHDCT.setBackground(Color.white);
        btnXuatExcelHDCT.setForeground(Color.black);
    }//GEN-LAST:event_btnXuatExcelHDCTMouseExited

    private void btnXuatExcelHDCTMouseEntered(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_btnXuatExcelHDCTMouseEntered
        btnXuatExcelHDCT.setBackground(Color.decode("#FDA7DF"));
        btnXuatExcelHDCT.setForeground(Color.white);
    }//GEN-LAST:event_btnXuatExcelHDCTMouseEntered

    private void btnThemHDCTActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnThemHDCTActionPerformed
        // TODO add your handling code here:
        if (isValidatedHDCT()) {
            insertHDCT();
            capNhatSoLuongSP_insert();
        }
    }//GEN-LAST:event_btnThemHDCTActionPerformed

    private void btnThemHDCTMouseExited(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_btnThemHDCTMouseExited
        btnThemHDCT.setBackground(Color.white);
        btnThemHDCT.setForeground(Color.black);
    }//GEN-LAST:event_btnThemHDCTMouseExited

    private void btnThemHDCTMouseEntered(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_btnThemHDCTMouseEntered
        btnThemHDCT.setBackground(Color.decode("#FDA7DF"));
        btnThemHDCT.setForeground(Color.white);
    }//GEN-LAST:event_btnThemHDCTMouseEntered

    private void cboTrangThaiMousePressed(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_cboTrangThaiMousePressed
        // TODO add your handling code here:
        updateTrangThai();
    }//GEN-LAST:event_cboTrangThaiMousePressed

    private void btnXuatExcelHDActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnXuatExcelHDActionPerformed
        try {
            XSSFWorkbook workbook = new XSSFWorkbook();
            XSSFSheet sheet = workbook.createSheet("Bảng Hóa Đơn");

            sheet.setColumnWidth(0, 4000);
            sheet.setColumnWidth(1, 5000);
            sheet.setColumnWidth(2, 5000);
            sheet.setColumnWidth(3, 5000);
            sheet.setColumnWidth(4, 5000);
            sheet.setColumnWidth(5, 5000);

            XSSFRow row = null;
            XSSFCell cell = null;

            row = sheet.createRow(2);
            row.setHeight((short) 500);
            cell = row.createCell(0, CellType.STRING);
            cell.setCellValue("Bảng Hóa Đơn");
            row = sheet.createRow(3);
            row.setHeight((short) 500);
            cell = row.createCell(0, CellType.STRING);
            cell.setCellValue("Mã hóa đơn");

            cell = row.createCell(1, CellType.STRING);
            cell.setCellValue("Ngày mua hàng");

            cell = row.createCell(2, CellType.STRING);
            cell.setCellValue("Trạng thái");

            cell = row.createCell(3, CellType.STRING);
            cell.setCellValue("Mã nhân viên");

            cell = row.createCell(4, CellType.STRING);
            cell.setCellValue("Mã khách hàng");

            cell = row.createCell(5, CellType.STRING);
            cell.setCellValue("Ghi chú");

            String key = txtTimKiemHD.getText();
            List<HoaDon> list = hoaDonDAO.selectByKHorNV(key);
            ArrayList<HoaDon> exportToExcel = new ArrayList<>();
            exportToExcel = (ArrayList<HoaDon>) list;
            for (int i = 0; i < exportToExcel.size(); i++) {
                HoaDon hd = exportToExcel.get(i);
                row = sheet.createRow((short) 4 + i);
                row.setHeight((short) 500);
                row.createCell(0).setCellValue(hd.getMaHoaDon());
                row.createCell(1).setCellValue(DateHelper.toString(hd.getNgayMuaHang(), "dd/MM/yyyy"));
                row.createCell(2).setCellValue(hd.getTrangThai());
                row.createCell(3).setCellValue(hd.getMaNhanVien());
                row.createCell(4).setCellValue(hd.getMaKhachHang());
                row.createCell(5).setCellValue(hd.getGhiChu());

            }
            FileOutputStream fos = new FileOutputStream(new File("Excel\\hoadon.xlsx"));
            workbook.write(fos);
            fos.close();
            JOptionPane.showMessageDialog(null, "File export success");
        } catch (Exception e) {
            e.printStackTrace();
        }
    }//GEN-LAST:event_btnXuatExcelHDActionPerformed

    private void btnXuatExcelHDCTActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnXuatExcelHDCTActionPerformed
        try {
            XSSFWorkbook workbook = new XSSFWorkbook();
            XSSFSheet sheet = workbook.createSheet("Bảng Hóa Đơn Chi Tiết");
            XSSFRow row = null;
            XSSFCell cell = null;

            sheet.setColumnWidth(0, 4000);
            sheet.setColumnWidth(1, 5000);
            sheet.setColumnWidth(2, 5000);
            sheet.setColumnWidth(3, 5000);
            sheet.setColumnWidth(4, 5000);
            sheet.setColumnWidth(5, 5000);

            row = sheet.createRow(1);
            row.setHeight((short) 500);
            cell = row.createCell(0, CellType.STRING);
            cell.setCellValue("Bảng Hóa Đơn Chi Tiết");
            row = sheet.createRow(3);
            row.setHeight((short) 500);

            cell = row.createCell(0, CellType.STRING);
            cell.setCellValue("Mã hóa đơn chi tiết");

            cell = row.createCell(1, CellType.STRING);
            cell.setCellValue("Mã sản phẩm");

            cell = row.createCell(2, CellType.STRING);
            cell.setCellValue("Mã hóa đơn");

            cell = row.createCell(3, CellType.STRING);
            cell.setCellValue("Số lượng");

            cell = row.createCell(4, CellType.STRING);
            cell.setCellValue("Đơn giá");

            cell = row.createCell(5, CellType.STRING);
            cell.setCellValue("Thành tiền");

            double sum = 0;

            List<HoaDonChiTiet> list = hoaDonChiTietDAO.selectAll();
            ArrayList<HoaDonChiTiet> exportToExcel = new ArrayList<>();
            exportToExcel = (ArrayList<HoaDonChiTiet>) list;
            for (int i = 0; i < exportToExcel.size(); i++) {
                HoaDonChiTiet hdct = exportToExcel.get(i);
                row = sheet.createRow((short) 4 + i);
                row.setHeight((short) 500);
                row.createCell(0).setCellValue(hdct.getMaHoaDonChiTiet());
                row.createCell(1).setCellValue(hdct.getMaSanPham());
                row.createCell(2).setCellValue(hdct.getMaHoaDon());
                row.createCell(3).setCellValue(hdct.getSoLuong());
                row.createCell(4).setCellValue(hdct.getDonGia());
                row.createCell(5).setCellValue(hdct.getDonGia() * hdct.getSoLuong());
                // tong tien
                sum += (hdct.getDonGia() * hdct.getSoLuong());
                row = sheet.createRow(2);
                cell = row.createCell(5);
                row.setHeight((short) 500);
                cell.setCellValue("Tổng tiền : " + sum);

            }

            FileOutputStream fos = new FileOutputStream(new File("Excel\\hoadonchitiet.xlsx"));
            workbook.write(fos);
            fos.close();
            JOptionPane.showMessageDialog(null, "File export success");
        } catch (Exception e) {
            e.printStackTrace();
        }
    }//GEN-LAST:event_btnXuatExcelHDCTActionPerformed

    private void txtTimKiemHDCTKeyReleased(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_txtTimKiemHDCTKeyReleased
        // TODO add your handling code here:
        timKiemHDCT();
    }//GEN-LAST:event_txtTimKiemHDCTKeyReleased


    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton btnClearHDCT;
    private javax.swing.JButton btnClearHoaDon;
    private javax.swing.JButton btnSuaHD;
    private javax.swing.JButton btnSuaHDCT;
    private javax.swing.JButton btnThemHD;
    private javax.swing.JButton btnThemHDCT;
    private javax.swing.JButton btnXoaHD;
    private javax.swing.JButton btnXoaHDCT;
    private javax.swing.JButton btnXuatExcelHD;
    private javax.swing.JButton btnXuatExcelHDCT;
    private com.toedter.calendar.JDateChooser calendarNgayMuaHang;
    private com.superidol.swing.Combobox cboTrangThai;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JPanel jPanel3;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JScrollPane jScrollPane2;
    private javax.swing.JScrollPane jScrollPane4;
    private javax.swing.JTabbedPane jTabbedPane1;
    private javax.swing.JLabel lblGhiChu;
    private javax.swing.JLabel lblHDCT;
    private javax.swing.JLabel lblHoaDon;
    private javax.swing.JLabel lblMaHoaDonHDCT;
    private javax.swing.JLabel lblMaKhachHang;
    private javax.swing.JLabel lblMaNhanVien;
    private javax.swing.JLabel lblMaSPHDCT;
    private javax.swing.JLabel lblNgayMuaHang;
    private javax.swing.JLabel lblSoLuongHDCT;
    private javax.swing.JLabel lblThonTinHDCT;
    private javax.swing.JLabel lblThongTinHD;
    private javax.swing.JLabel lblTimKiem;
    private javax.swing.JLabel lblTimKiemHDCT;
    private javax.swing.JLabel lblTrangThai;
    private com.superidol.swing.PanelRound panelRound1;
    private com.superidol.swing.PanelRound panelRound2;
    private com.superidol.swing.ScrollBar scrollBar2;
    private com.superidol.swing.ScrollBar scrollBar3;
    private com.superidol.swing.TableColumn tblHoaDon;
    private com.superidol.swing.TableColumn tblHoaDonChiTiet;
    private javax.swing.JTextPane txtGhiChu;
    private javax.swing.JTextField txtMaHoaDonHDCT;
    private javax.swing.JTextField txtMaKhachHang;
    private javax.swing.JTextField txtMaNhanVien;
    private javax.swing.JTextField txtMaSPHDCT;
    private javax.swing.JTextField txtSoLuongHDCT;
    private javax.swing.JTextField txtTimKiemHD;
    private javax.swing.JTextField txtTimKiemHDCT;
    // End of variables declaration//GEN-END:variables

    int rowHoaDon = -1;
    int rowHDCT = -1;
    HoaDonDAO hoaDonDAO = new HoaDonDAO();
    HoaDonChiTietDAO hoaDonChiTietDAO = new HoaDonChiTietDAO();
    KhachHangDAO khachHangDAO = new KhachHangDAO();
    SanPhamDAO sanPhamDAO = new SanPhamDAO();

    private void fillToTableHoaDon() {
        DefaultTableModel model = (DefaultTableModel) tblHoaDon.getModel();
        model.setRowCount(0);
        try {
            List<HoaDon> list = hoaDonDAO.selectAll();
            for (HoaDon hoaDon : list) {
                Object row[] = {hoaDon.getMaHoaDon(), hoaDon.getNgayMuaHang(), hoaDon.getTrangThai(), hoaDon.getMaNhanVien(), hoaDon.getMaKhachHang(), hoaDon.getGhiChu()};
                model.addRow(row);
            }
        } catch (Exception ex) {
            MsgBox.alert(this, "Lỗi truy vấn dữ liệu!");
        }
    }

    private void setForm(HoaDon hoaDon) {
        lblMaKhachHang.setToolTipText(hoaDon.getMaHoaDon() + "");
        txtMaNhanVien.setText(hoaDon.getMaNhanVien());
        calendarNgayMuaHang.setDate(hoaDon.getNgayMuaHang());
        txtMaKhachHang.setText(hoaDon.getMaKhachHang() + "");
        txtGhiChu.setText(hoaDon.getGhiChu());
        String trangThaiHoaDon = hoaDon.getTrangThai();
        if (trangThaiHoaDon == null) {
            fillCboTrangThaiThemMoi();
            cboTrangThai.setSelectedIndex(0);
        } else {
            switch (trangThaiHoaDon) {
                case "Đã thanh toán":
                    cboTrangThai.setSelectedIndex(0);
                    break;
                case "Chưa thanh toán":
                    cboTrangThai.setSelectedIndex(1);
                    break;
                case "Huỷ bỏ":
                    cboTrangThai.setSelectedIndex(2);
                    break;
                default:
                    break;
            }
        }
    }

    private HoaDon getForm() {
        HoaDon hoaDon = new HoaDon();
        hoaDon.setMaKhachHang(Integer.parseInt(txtMaKhachHang.getText()));
        hoaDon.setMaNhanVien(txtMaNhanVien.getText());
        hoaDon.setNgayMuaHang(calendarNgayMuaHang.getDate());
        hoaDon.setGhiChu(txtGhiChu.getText());
        hoaDon.setTrangThai((String) cboTrangThai.getSelectedItem());
        hoaDon.setMaHoaDon(Integer.parseInt(lblMaKhachHang.getToolTipText()));
        return hoaDon;
    }

    private void clearForm() {
        HoaDon hoaDon = new HoaDon();
        hoaDon.setMaNhanVien(Authorize.user.getMaNhanVien());
        hoaDon.setNgayMuaHang(DateHelper.now());
        setForm(hoaDon);
        rowHoaDon = -1;
        updateStatusButton();
    }

    private void edit() {
        int maHoaDon = (int) tblHoaDon.getValueAt(rowHoaDon, 0);
        HoaDon hoaDon = hoaDonDAO.selectById(maHoaDon);
        setForm(hoaDon);
    }

    private void insert() {
        HoaDon hoaDon = getForm();
        try {
            hoaDonDAO.insert(hoaDon);
            fillToTableHoaDon();
            clearForm();
            MsgBox.alert(this, "Thêm hoá đơn thành công!");
            disableButton();
        } catch (Exception ex) {
            MsgBox.alert(this, "Thêm hoá đơn thất bại!");
            disableButton();
        }
    }

    private void update() {
        HoaDon hoaDon = getForm();
        try {
            hoaDonDAO.update(hoaDon);
            capNhatSoLuongCbo();
            fillToTableHoaDon();
            clearForm();
            MsgBox.alert(this, "Sửa hoá đơn thành công!");
            disableButton();
        } catch (Exception ex) {
            MsgBox.alert(this, "Sửa hoá đơn thất bại!");
            disableButton();
        }
    }

    private void delete() {
        if (!Authorize.isManager()) {
            MsgBox.alert(this, "Bạn không được quyền xoá hoá đơn!");
        } else if (MsgBox.confirm(this, "Bạn có muốn xoá hoá đơn này ?")) {
            try {
                int maHoaDon = Integer.parseInt(lblMaKhachHang.getToolTipText());
                hoaDonDAO.delete(maHoaDon);
                fillToTableHoaDon();
                fillToTableHDCT();
                clearForm();
                MsgBox.alert(this, "Xoá hoá đơn thành công!");
                disableButton();
            } catch (Exception ex) {
                MsgBox.alert(this, "Xoá hoá đơn thất bại!");
                disableButton();
            }
        }
    }

    private void updateStatusButton() {
        boolean edit = (rowHoaDon >= 0);
        btnThemHD.setEnabled(!edit);
        btnSuaHD.setEnabled(edit);
        btnXoaHD.setEnabled(edit);
    }

    private void fillCboTrangThaiThemMoi() {
        DefaultComboBoxModel model = (DefaultComboBoxModel) cboTrangThai.getModel();
        model.removeAllElements();
        model.addElement("Đã thanh toán");
        model.addElement("Chưa thanh toán");
    }

    private void fillCboTrangThaiUpdate() {
        DefaultComboBoxModel model = (DefaultComboBoxModel) cboTrangThai.getModel();
        model.removeAllElements();
        model.addElement("Đã thanh toán");
        model.addElement("Chưa thanh toán");
        model.addElement("Huỷ bỏ");
    }

    private void disableButton() {
        btnThemHD.setEnabled(false);
        btnSuaHD.setEnabled(false);
        btnXoaHD.setEnabled(false);
    }

    private void timKiem() {
        DefaultTableModel model = (DefaultTableModel) tblHoaDon.getModel();
        model.setRowCount(0);
        String keyword = txtTimKiemHD.getText();
        try {
            List<HoaDon> list = hoaDonDAO.selectByKHorNV(keyword);
            for (HoaDon hoaDon : list) {
                Object row[] = {hoaDon.getMaHoaDon(), hoaDon.getNgayMuaHang(), hoaDon.getTrangThai(), hoaDon.getMaNhanVien(), hoaDon.getMaKhachHang(), hoaDon.getGhiChu()};
                model.addRow(row);
            }
        } catch (Exception ex) {

        }
    }

    private void timKiemHDCT() {
        DefaultTableModel model = (DefaultTableModel) tblHoaDonChiTiet.getModel();
        model.setRowCount(0);
        String keyword = txtTimKiemHDCT.getText();
        try {
            List<HoaDonChiTiet> list = hoaDonChiTietDAO.selectByTenSP_MaHoaDon(keyword);
            for (HoaDonChiTiet hoaDonChiTiet : list) {
                Object[] row = {hoaDonChiTiet.getMaHoaDonChiTiet(), hoaDonChiTiet.getMaSanPham(), hoaDonChiTiet.getTenSanPham(), hoaDonChiTiet.getMaHoaDon(), hoaDonChiTiet.getSoLuong(), hoaDonChiTiet.getDonGia(), hoaDonChiTiet.getSoLuong() * hoaDonChiTiet.getDonGia()};
                model.addRow(row);
            }
        } catch (Exception ex) {

        }
    }

    private boolean maKHTonTai() {
        String error = "";
        int maKH = Integer.parseInt(txtMaKhachHang.getText());
        KhachHang khachHang = khachHangDAO.selectById(maKH);
        if (khachHang == null) {
            error += "Mã khách hàng không tồn tại!";
        }
        if (!error.equals("")) {
            MsgBox.alert(this, error);
        }
        return error.equals("");
    }

    private boolean isValidated() {
        String error = "";
        Date ngayMuaHang = calendarNgayMuaHang.getDate();
        if (ngayMuaHang.compareTo(DateHelper.now()) > 0) {
            error += "Ngày mua hàng không hợp lệ!\n";
        }
        try {
            int maKH = Integer.parseInt(txtMaKhachHang.getText());
        } catch (NumberFormatException ex) {
            error += "Mã khách hàng không hợp lệ!";
        }
        if (txtGhiChu.getText().length() > 100) {
            error += "Ghi chú quá dài!";
        }
        if (!error.equals("")) {
            MsgBox.alert(this, error);
        }
        return error.equals("");
    }

    //Hoá đơn chi tiết
    private void fillToTableHDCT() {
        DefaultTableModel model = (DefaultTableModel) tblHoaDonChiTiet.getModel();
        model.setRowCount(0);
        try {
            List<HoaDonChiTiet> list = hoaDonChiTietDAO.selectAll();
            for (HoaDonChiTiet hoaDonChiTiet : list) {
                Object[] row = {hoaDonChiTiet.getMaHoaDonChiTiet(), hoaDonChiTiet.getMaSanPham(), hoaDonChiTiet.getTenSanPham(), hoaDonChiTiet.getMaHoaDon(), hoaDonChiTiet.getSoLuong(), hoaDonChiTiet.getDonGia(), hoaDonChiTiet.getSoLuong() * hoaDonChiTiet.getDonGia()};
                model.addRow(row);
            }
        } catch (Exception ex) {
            ex.printStackTrace();
            MsgBox.alert(this, "Lỗi truy vấn dữ liệu!");
        }
    }

    private void setFormHDCT(HoaDonChiTiet hoaDonChiTiet) {
        lblMaHoaDonHDCT.setToolTipText(hoaDonChiTiet.getMaHoaDonChiTiet() + "");
        txtMaHoaDonHDCT.setText(hoaDonChiTiet.getMaHoaDon() + "");
        txtSoLuongHDCT.setText(hoaDonChiTiet.getSoLuong() + "");
        txtMaSPHDCT.setText(hoaDonChiTiet.getMaSanPham() + "");
    }

    private HoaDonChiTiet getFormHDCT() {
        HoaDonChiTiet hoaDonChiTiet = new HoaDonChiTiet();
        hoaDonChiTiet.setMaHoaDonChiTiet(Integer.parseInt(lblMaHoaDonHDCT.getToolTipText()));
        hoaDonChiTiet.setMaHoaDon(Integer.parseInt(txtMaHoaDonHDCT.getText()));
        hoaDonChiTiet.setMaSanPham(Integer.parseInt(txtMaSPHDCT.getText()));
        hoaDonChiTiet.setSoLuong(Integer.parseInt(txtSoLuongHDCT.getText()));
        hoaDonChiTiet.setDonGia(layDonGia((Integer.parseInt(txtMaSPHDCT.getText()))));
        return hoaDonChiTiet;
    }

    private double layDonGia(int maSP) {
        SanPham sanPham = sanPhamDAO.findById(maSP);
        if (sanPham != null) {
            return sanPham.getGiaBanRa();
        }
        return 0;
    }

    private void editHDCT() {
        int maHDCT = (int) tblHoaDonChiTiet.getValueAt(rowHDCT, 0);
        HoaDonChiTiet hoaDonChiTiet = hoaDonChiTietDAO.selectById(maHDCT);
        setFormHDCT(hoaDonChiTiet);
    }

    private void clearFormHDCT() {
        HoaDonChiTiet hoaDonChiTiet = new HoaDonChiTiet();
        setFormHDCT(hoaDonChiTiet);
        rowHDCT = -1;
        updateStatusButtonHDCT();
    }

    private void insertHDCT() {
        HoaDonChiTiet hoaDonChiTiet = getFormHDCT();
        SanPham sanPham = sanPhamDAO.findById(hoaDonChiTiet.getMaSanPham());
        hoaDonChiTiet.setTenSanPham(sanPham.getTenSanPham());
        try {
            hoaDonChiTietDAO.insert(hoaDonChiTiet);
            fillToTableHDCT();
            MsgBox.alert(this, "Thêm thành công!");
            disabledButtonHDCT();
        } catch (Exception ex) {
            MsgBox.alert(this, "Thêm thất bại!");
            disabledButtonHDCT();
        }
    }

    private void updateHDCT() {
        HoaDonChiTiet hoaDonChiTiet = getFormHDCT();
        SanPham sanPham = sanPhamDAO.findById(hoaDonChiTiet.getMaSanPham());
        hoaDonChiTiet.setTenSanPham(sanPham.getTenSanPham());
        try {
            hoaDonChiTietDAO.update(hoaDonChiTiet);
            fillToTableHDCT();
            clearFormHDCT();
            MsgBox.alert(this, "Sửa thành công!");
            disabledButtonHDCT();
        } catch (Exception ex) {
            MsgBox.alert(this, "Sửa thất bại!");
            disabledButtonHDCT();
        }
    }

    private void deleteHDCT() {
        if (!Authorize.isManager()) {
            MsgBox.alert(this, "Bạn không được quyền xoá hoá đơn!");
        } else if (MsgBox.confirm(this, "Bạn có muốn xoá hoá đơn này ?")) {
            try {
                int maHoaDonChiTiet = Integer.parseInt(lblMaHoaDonHDCT.getToolTipText());
                hoaDonChiTietDAO.delete(maHoaDonChiTiet);
                fillToTableHDCT();
                clearFormHDCT();
                MsgBox.alert(this, "Xoá hoá đơn thành công!");
                disabledButtonHDCT();
            } catch (Exception ex) {
                MsgBox.alert(this, "Xoá hoá đơn thất bại!");
                disabledButtonHDCT();
            }
        }
    }

    private void updateStatusButtonHDCT() {
        boolean edit = (rowHDCT >= 0);
        btnThemHDCT.setEnabled(!edit);
        btnSuaHDCT.setEnabled(edit);
        btnXoaHDCT.setEnabled(edit);
    }

    private void disabledButtonHDCT() {
        btnThemHDCT.setEnabled(false);
        btnSuaHDCT.setEnabled(false);
        btnXoaHDCT.setEnabled(false);
    }

    //số lượng chưa trừ
    private boolean isValidatedHDCT() {
        String error = "";
        try {
            int maHoaDon = Integer.parseInt(txtMaHoaDonHDCT.getText());
            HoaDon hoaDon = hoaDonDAO.selectById(maHoaDon);
            if (hoaDon == null) {
                error += "Mã hoá đơn không tồn tại!\n";
            }
        } catch (NumberFormatException ex) {
            error += "Mã hoá đơn không hợp lệ!\n";
        }
        try {
            int maSanPham = Integer.parseInt(txtMaSPHDCT.getText());
            SanPham sanPham = sanPhamDAO.findById(maSanPham);
            if (sanPham == null) {
                error += "Mã sản phẩm không tồn tại!\n";
            }
        } catch (NumberFormatException ex) {
            error += "Mã sản phẩm không hợp lệ!\n";
        }

        try {
            int soLuong = Integer.parseInt(txtSoLuongHDCT.getText());
            if (soLuong <= 0) {
                error += "Số lượng sản phẩm phải lớn hơn 0!\n";
            }
            int maSanPham = Integer.parseInt(txtMaSPHDCT.getText());
            SanPham sanPham = sanPhamDAO.findById(maSanPham);
            if (sanPham != null) {
                if (sanPham.getSoLuongConLai() < soLuong) {
                    error += "Sản phẩm không đủ!\n";
                }
            }
        } catch (NumberFormatException ex) {
            error += "Số lượng không hợp lệ!\n";
        }
        if (!error.equals("")) {
            MsgBox.alert(this, error);
        }
        return error.equals("");
    }

    private void capNhatSoLuongSP_insert() {
        //getHoaDon
        int maHoaDon = Integer.parseInt(txtMaHoaDonHDCT.getText());
        HoaDon hoaDon = hoaDonDAO.selectById(maHoaDon);
        //
        //getSanPham
        int maSanPham = Integer.parseInt(txtMaSPHDCT.getText());
        SanPham sanPham = sanPhamDAO.findById(maSanPham);
        //
        int soLuongHuyBo = 0;
        int soLuongBanDuoc = 0;
        if (hoaDon.getTrangThai().equals("Huỷ bỏ")) {
            soLuongHuyBo = Integer.parseInt(txtSoLuongHDCT.getText());
        } else {
            soLuongBanDuoc = Integer.parseInt(txtSoLuongHDCT.getText());
        }
        int soLuongConLai = sanPham.getSoLuongConLai() - soLuongBanDuoc;
        sanPham.setSoLuongConLai(soLuongConLai);
        sanPhamDAO.update(sanPham);
        clearFormHDCT();
    }

    private void capNhatSoLuongSP_update() {
        //getHoaDonChiTiet
        int maHoaDonChiTiet = Integer.parseInt(lblMaHoaDonHDCT.getToolTipText());
        HoaDonChiTiet hoaDonChiTiet = hoaDonChiTietDAO.selectById(maHoaDonChiTiet);
        //
        //getSanPham
        int maSanPham = Integer.parseInt(txtMaSPHDCT.getText());
        SanPham sanPham = sanPhamDAO.findById(maSanPham);
        //
        //getHoaDon
        int maHoaDon = Integer.parseInt(txtMaHoaDonHDCT.getText());
        HoaDon hoaDon = hoaDonDAO.selectById(maHoaDon);
        //
        int soLuongBanDuoc = 0;
        int soLuongHuyBo = 0;
        int soLuongTrenHoaDon = hoaDonChiTiet.getSoLuong();
        if (hoaDon.getTrangThai().equals("Huỷ bỏ")) {
            soLuongHuyBo = Integer.parseInt(txtSoLuongHDCT.getText());
        } else {
            soLuongBanDuoc = Integer.parseInt(txtSoLuongHDCT.getText());
        }
        int soLuongConLai = sanPham.getSoLuongConLai() + soLuongTrenHoaDon - soLuongBanDuoc + soLuongHuyBo;
        sanPham.setSoLuongConLai(soLuongConLai);
        sanPhamDAO.update(sanPham);
    }
    private String trangThai = "";

    private void updateTrangThai() {
        trangThai = (String) cboTrangThai.getSelectedItem();
    }

    private void capNhatSoLuongCbo() {
        //getHoaDon
        int maHoaDon = Integer.parseInt(lblMaKhachHang.getToolTipText());
        HoaDon hoaDon = hoaDonDAO.selectById(maHoaDon);
        //
        List<HoaDonChiTiet> list = hoaDonChiTietDAO.selectByMaHoaDon(maHoaDon);
        if ((hoaDon.getTrangThai().equals("Huỷ bỏ") && trangThai.equals("Chưa thanh toán")) || (hoaDon.getTrangThai().equals("Huỷ bỏ") && trangThai.equals("Đã thanh toán"))) {
            for (HoaDonChiTiet hdct : list) {
                SanPham sanPham = sanPhamDAO.findById(hdct.getMaSanPham());
                int soLuongSanPham = sanPham.getSoLuongConLai() + hdct.getSoLuong();
                sanPham.setSoLuongConLai(soLuongSanPham);
                sanPhamDAO.update(sanPham);
            }
        } else if ((hoaDon.getTrangThai().equals("Chưa thanh toán") && trangThai.equals("Huỷ bỏ")) || (hoaDon.getTrangThai().equals("Đã thanh toán") && trangThai.equals("Huỷ bỏ"))) {
            for (HoaDonChiTiet hdct : list) {
                SanPham sanPham = sanPhamDAO.findById(hdct.getMaSanPham());
                int soLuongSanPham = sanPham.getSoLuongConLai() - hdct.getSoLuong();
                sanPham.setSoLuongConLai(soLuongSanPham);
                sanPhamDAO.update(sanPham);
            }
        }

    }
}
